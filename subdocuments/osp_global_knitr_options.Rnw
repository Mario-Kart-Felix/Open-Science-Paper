%%%-------------------------------------------------%%%
%%% Sub document global preferences for Knitr %%%
%%%-------------------------------------------------%%%

<<global_knitr_options, tidy=FALSE, highlight=FALSE, include=FALSE, cache=FALSE, eval=TRUE>>=
  # messages 
  opts_chunk$set(warning=FALSE)
  # code evaluation 
  opts_chunk$set(eval=TRUE)
  # code decoration
  opts_chunk$set(tidy=TRUE, prompt=TRUE, comment='##', highlight=TRUE, size='normalsize')
  # cache options
  opts_chunk$set(cache.path='cache/')
  # plot options
  opts_chunk$set(fig.path='graphics/dynamic/', dev='tikz', fig.keep='high', fig.show='hold')  
  # tune details of graphics appearance 
  knit_hooks$set(par=function(before, options, envir){
    if (before && options$fig.show!='none') par(mar=c(4,4,.1,.1),cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
    }
  )
  # tikz options
  options(replace.assign=TRUE, width=60)
  options(tikzSanitizeCharacters = c('%','$','}','{','^', '_'))
  options(tikzReplacementCharacters = c('\\%','\\$','\\}','\\{','\\^{}', '\\textunderscore'))
@ 

% <<global_knitr_options, tidy=FALSE, highlight=FALSE, include=FALSE, cache=FALSE, eval=TRUE>>=
% spar <- function(mar=if(!axes)
                 % c(2.25+bot-.45*multi,2+left,.5+top+.25*multi,.5+rt) else
                 % c(3.25+bot-.45*multi,3.5+left,.5+top+.25*multi,.5+rt),
                 % lwd = if(multi)1 else 1.75,
                 % mgp = if(!axes) mgp=c(.75, .1, 0) else
                 % if(multi) c(1.5, .365, 0) else c(2.4-.4, 0.475, 0),
                 % tcl = if(multi)-0.25 else -0.4,
                 % bot=0, left=0, top=0, rt=0, ps=if(multi) 14 else 10,
                 % mfrow=NULL, axes=TRUE, ...) {
  % multi <- length(mfrow) > 0
  % par(mar=mar, lwd=lwd, mgp=mgp, tcl=tcl, ps=ps, ...)
  % if(multi) par(mfrow=mfrow)
% }

% knitrSet <- function(basename=NULL, w=4, h=3,
                     % fig.align='center', fig.show='hold',fig.pos='htbp',
                     % fig.lp=paste('fig', basename, sep=':'),
                     % tidy=FALSE, stop_on_error=2,
                     % width=61, keep.source=TRUE) {
  % if(length(basename)) basename <- paste(basename, '-', sep='')

  % options(width=width)
  % ## fills Sweavel boxes when font size is \small and svmono.cls
  % ## is in effect (use 65 without svmono)

  % render_listings()
  % unlink('messages.txt') # Start fresh with each run
  % hook_log = function(x, options) cat(x, file='messages.txt', append=TRUE)
  % knit_hooks$set(warning = hook_log, message = hook_log)# , error = hook_lst_bf)
  % knit_hooks$set(par=function(before, options, envir)
                 % if(before && options$fig.show != 'none') {
                   % p <- c('bty','mfrow','ps','bot','top','left','rt','lwd',
                          % 'mgp','tcl', 'axes')
                   % pars <- opts_current$get(p)
                   % pars <- pars[!is.na(names(pars))]
                   % if(length(pars)) do.call('spar', pars) else spar()
                 % })
  % opts_knit$set(aliases=c(h='fig.height', w='fig.width',
                  % cap='fig.cap', scap='fig.scap'),
                % eval.after = c('fig.cap','fig.scap'),
                % stop_on_error=stop_on_error, keep.source=keep.source)
  % opts_chunk$set(fig.path=basename, fig.align=fig.align, w=w, h=h,
                 % fig.show=fig.show, fig.lp=fig.lp, fig.pos=fig.pos,
                 % par=TRUE, tidy=tidy, out.width=NULL)
% }
% @

